<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>RESOURCE_NAME</name>
          <description>Resource Name</description>
          <defaultValue>PIC-SURE Aggregate Resource</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
         <hudson.model.StringParameterDefinition>
          <name>RESOURCE_PATH</name>
          <description>The path to be used in wildfly deployments</description>
          <defaultValue>pic-sure-aggregate-resource</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TARGET_OBFUSCATION_THRESHOLD</name>
          <description>Configure the aggregate resource to obfuscate results fewer than this threshold</description>
          <defaultValue>10</defaultValue>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TARGET_PICSURE_URL</name>
          <description>Target PIC-SURE URL</description>
          <defaultValue>http://hpds:8080/PIC-SURE/</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>git_hash</name>
          <description></description>
          <defaultValue>*/master</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@4.3.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/hms-dbmi/pic-sure.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${git_hash}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Maven>
      <targets>clean package -DskipTests -Dwildfly.skip=true</targets>
      <mavenName>Maven Home</mavenName>
      <usePrivateRepository>false</usePrivateRepository>
      <settings class="jenkins.mvn.DefaultSettingsProvider"/>
      <globalSettings class="jenkins.mvn.DefaultGlobalSettingsProvider"/>
      <injectBuildVariables>false</injectBuildVariables>
    </hudson.tasks.Maven>
    <hudson.tasks.Shell>
      <command>
      
cd pic-sure-resources/pic-sure-aggregate-data-sharing-resource
mkdir -p /usr/local/docker-config/wildfly/deployments
cp target/pic-sure-aggregate-data-sharing-resource.war /usr/local/docker-config/wildfly/deployments/$RESOURCE_PATH.war

mkdir -p /usr/local/docker-config/wildfly/aggregate-data-sharing/$RESOURCE_PATH
PROP_FILE=&quot;/usr/local/docker-config/wildfly/aggregate-data-sharing/$RESOURCE_PATH/resource.properties&quot;



cat &gt; $PROP_FILE &lt;&lt;-END
target.picsure.url=$TARGET_PICSURE_URL
target.picsure.token=
target.picsure.obfuscation_threshold=$TARGET_OBFUSCATION_THRESHOLD
END

RESOURCE_ID=`uuidgen -r`
RESOURCE_ID_HEX=`echo $RESOURCE_ID | awk &apos;{ print toupper($0) }&apos;|sed &apos;s/-//g&apos;;`
export SQL=&quot;INSERT INTO resource (uuid, targetURL, resourceRSPath, description, name, token) \
 VALUES (unhex(&apos;$RESOURCE_ID_HEX&apos;), NULL, &apos;http://wildfly:8080/$RESOURCE_PATH/pic-sure/aggregate-data-sharing/&apos;, &apos;$RESOURCE_DESC&apos;, &apos;$RESOURCE_NAME&apos;, NULL);&quot;

docker run -i --rm --security-opt label=disable -v /root/.my.cnf:/root/.my.cnf --network=host mariadb:10.8.3 mysql -e &quot;$SQL&quot; picsure</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
