<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>RESOURCE_NAME</name>
          <description>Resource Name</description>
          <defaultValue>PIC-SURE Aggregate Resource</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
         <hudson.model.StringParameterDefinition>
          <name>RESOURCE_PATH</name>
          <description>The path to be used in wildfly deployments</description>
          <defaultValue>pic-sure-aggregate-resource</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TARGET_OBFUSCATION_THRESHOLD</name>
          <description>Configure the aggregate resource to obfuscate results fewer than this threshold</description>
          <defaultValue>0</defaultValue>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TARGET_PICSURE_URL</name>
          <description>Target PIC-SURE URL</description>
          <defaultValue>http://hpds:8080/PIC-SURE/</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command># Configure
AGG_PATH=&quot;/usr/local/docker-config/wildfly/aggregate-data-sharing/$RESOURCE_PATH&quot;
mkdir -p $AGG_PATH
PROP_FILE=&quot;$AGG_PATH/resource.properties&quot;

if [ ! -f $PROP_FILE ]; then
    # Make properties file
    cat &gt; $PROP_FILE &lt;&lt;-END
target.picsure.url=$TARGET_PICSURE_URL
target.picsure.token=
target.picsure.obfuscation_threshold=$TARGET_OBFUSCATION_THRESHOLD
END

    # Insert into DB
    RESOURCE_ID=`uuidgen -r`
    RESOURCE_ID_HEX=`echo $RESOURCE_ID | awk &apos;{ print toupper($0) }&apos;| sed &apos;s/-//g&apos;;`
    SQL=&quot;INSERT INTO resource (uuid, targetURL, resourceRSPath, description, name, token) \
    VALUES (unhex(&apos;$RESOURCE_ID_HEX&apos;), NULL, &apos;http://wildfly:8080/$RESOURCE_PATH/pic-sure/aggregate-data-sharing/&apos;, &apos;$RESOURCE_DESC&apos;, &apos;$RESOURCE_NAME&apos;, NULL);&quot;
    docker run --rm -i -v $MYSQL_CONFIG_DIR/.my.cnf:/root/.my.cnf --network=${MYSQL_NETWORK:-host} mysql mysql -e &quot;$SQL&quot; picsure
else
    # Retrieve from DB
    SQL=&quot;SELECT LOWER(CONCAT(SUBSTR(HEX(uuid), 1, 8), &apos;-&apos;, SUBSTR(HEX(uuid), 9, 4), &apos;-&apos;, SUBSTR(HEX(uuid), 13, 4), &apos;-&apos;, SUBSTR(HEX(uuid), 17, 4), &apos;-&apos;, SUBSTR(HEX(uuid), 21))) from resource where name = &apos;$RESOURCE_NAME&apos;&quot;;
    RESOURCE_ID=$(docker run --rm -i -v $MYSQL_CONFIG_DIR/.my.cnf:/root/.my.cnf --network=${MYSQL_NETWORK:-host} mysql mysql -e &quot;$SQL&quot; picsure)
fi

echo &quot;Aggregate Resource ID is $RESOURCE_ID&quot;</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>